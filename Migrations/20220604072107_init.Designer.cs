// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Api_Joke;

#nullable disable

namespace Web.Api_Joke.Migrations
{
    [DbContext(typeof(JokesDbContext))]
    [Migration("20220604072107_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Web.Api_Joke.Joke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChangePassword")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Evaluation")
                        .HasColumnType("float");

                    b.Property<int>("EvaluationCount")
                        .HasColumnType("int");

                    b.Property<int>("JokeTypeId")
                        .HasColumnType("int");

                    b.Property<byte>("Season")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Snow")
                        .HasColumnType("bit");

                    b.Property<bool>("SunRain")
                        .HasColumnType("bit");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Wind")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("JokeTypeId");

                    b.HasIndex("UserName");

                    b.ToTable("jokes");
                });

            modelBuilder.Entity("Web.Api_Joke.JokeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("jokeTypes");
                });

            modelBuilder.Entity("Web.Api_Joke.User", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Web.Api_Joke.Joke", b =>
                {
                    b.HasOne("Web.Api_Joke.JokeType", "JokeType")
                        .WithMany("TypeJokes")
                        .HasForeignKey("JokeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Web.Api_Joke.User", "User")
                        .WithMany("UserJokes")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JokeType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Web.Api_Joke.JokeType", b =>
                {
                    b.Navigation("TypeJokes");
                });

            modelBuilder.Entity("Web.Api_Joke.User", b =>
                {
                    b.Navigation("UserJokes");
                });
#pragma warning restore 612, 618
        }
    }
}
